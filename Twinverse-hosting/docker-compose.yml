version: '3.8'

volumes:
  whatsapp_data:
  api_logs:

services:
  # React Frontend Application
  frontend:
    image: tsiyabi/twinverse-frontend:${IMAGE_TAG:-latest}
    restart: always
    ports:
      - "${FRONTEND_PORT:-3000}:3000"
    environment:
      - NODE_ENV=production
      - REACT_APP_SIMULATED_API_URL=http://${HOST_ADDRESS:-localhost}:8007
      - REACT_APP_MOVABLE_API_URL=http://${HOST_ADDRESS:-localhost}:8000
      - REACT_APP_INVENTORY_API_URL=http://${HOST_ADDRESS:-localhost}:8002
      - REACT_APP_BACKEND_API_URL=http://${HOST_ADDRESS:-localhost}:9000
      - REACT_APP_WHATSAPP_API_URL=http://${HOST_ADDRESS:-localhost}:3001
    depends_on:
      simulated-api:
        condition: service_healthy
      movable-api:
        condition: service_healthy
      inventory-api:
        condition: service_healthy
      backend-api:
        condition: service_healthy
      whatsapp-server:
        condition: service_healthy
    networks:
      - twinverse-network

  # SimulatedAPI
  simulated-api:
    image: tsiyabi/twinverse-simulated-api:${IMAGE_TAG:-latest}
    restart: always
    ports:
      - "${SIMULATED_API_PORT:-8007}:8007"
    environment:
      - PYTHONUNBUFFERED=1
    networks:
      - twinverse-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8007/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # MovableAPI
  movable-api:
    image: tsiyabi/twinverse-movable-api:${IMAGE_TAG:-latest}
    restart: always
    ports:
      - "${MOVABLE_API_PORT:-8000}:8000"
    environment:
      - PYTHONUNBUFFERED=1
    networks:
      - twinverse-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # InventoryAPI
  inventory-api:
    image: tsiyabi/twinverse-inventory-api:${IMAGE_TAG:-latest}
    restart: always
    ports:
      - "${INVENTORY_API_PORT:-8002}:8002"
    environment:
      - PYTHONUNBUFFERED=1
    networks:
      - twinverse-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8002/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Backend API with Gemini Integration
  backend-api:
    image: tsiyabi/twinverse-backend:${IMAGE_TAG:-latest}
    restart: always
    ports:
      - "${BACKEND_API_PORT:-9000}:9000"
    environment:
      - PYTHONUNBUFFERED=1
      - GEMINI_API_KEY=${GEMINI_API_KEY}
    volumes:
      - api_logs:/app/logs
    networks:
      - twinverse-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # WhatsApp Notification Server
  whatsapp-server:
    image: tsiyabi/twinverse-whatsapp:${IMAGE_TAG:-latest}
    restart: always
    ports:
      - "${WHATSAPP_PORT:-3001}:3001"
    environment:
      - NODE_ENV=production
    volumes:
      - whatsapp_data:/app/whatsapp-session
    networks:
      - twinverse-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3001/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

networks:
  twinverse-network:
    driver: bridge